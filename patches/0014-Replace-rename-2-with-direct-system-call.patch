From bd61d5e351055b894a63d7eb63d5da6864348716 Mon Sep 17 00:00:00 2001
From: topjohnwu <topjohnwu@gmail.com>
Date: Sat, 2 Sep 2023 05:21:13 -0700
Subject: [PATCH 14/31] Replace rename(2) with direct system call

NDK r26 introduced the following change:
https://android-review.googlesource.com/c/platform/bionic/+/2240019

renameat() was added to Linux in kernel 2.6.16
renameat2() was added to Linux in kernel 3.15

We would love to support kernel versions lower than 3.15
---
 libbb/wrap_funcs.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/libbb/wrap_funcs.c b/libbb/wrap_funcs.c
index d454885..e6a1366 100644
--- a/libbb/wrap_funcs.c
+++ b/libbb/wrap_funcs.c
@@ -28,11 +28,13 @@
 
 #include <sys/param.h>
 #include <sys/stat.h>
+#include <sys/syscall.h>
 
 #include <errno.h>
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <fcntl.h>
 
 char * __wrap_realpath(const char * __restrict path, char * __restrict resolved)
 {
@@ -219,3 +221,15 @@ char * __wrap_realpath(const char * __restrict path, char * __restrict resolved)
         resolved[resolved_len - 1] = '\0';
     return (resolved);
 }
+
+int __wrap_renameat(int old_dir_fd, const char *old_path, int new_dir_fd, const char *new_path) {
+#ifdef __NR_renameat
+    return syscall(__NR_renameat, old_dir_fd, old_path, new_dir_fd, new_path);
+#else
+    return syscall(__NR_renameat2, old_dir_fd, old_path, new_dir_fd, new_path, 0);
+#endif
+}
+
+int __wrap_rename(const char *old_path, const char *new_path) {
+    return __wrap_renameat(AT_FDCWD, old_path, AT_FDCWD, new_path);
+}
-- 
2.45.2

